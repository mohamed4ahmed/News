{"version":3,"sources":["Components/Right/Right.js","App.js","reportWebVitals.js","index.js"],"names":["Right","useState","images","setImages","useEffect","axios","get","then","resp","data","news","theNews","map","item","className","source","title","src","url","created_at","keywords","length","name","Math","random","imagePath","dataLength","next","console","log","setTimeout","concat","hasMore","loader","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAoEeA,EA3DD,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,KAKhBC,qBAAW,WACPC,IAAMC,IAAN,mDAA6DC,MAAK,SAAAC,GAAUL,EAAUK,EAAKC,KAAKC,WAEhG,IAIJ,IAAMC,EAAUT,EAAOU,KAAI,SAAAC,GACvB,OACI,sBAAKC,UAAU,WAAf,UAEI,6BAAKD,EAAKE,OAAOC,QAClB,qBAAKC,IAAKJ,EAAKE,OAAOG,MACtB,6BAAKL,EAAKG,QACV,4BAAIH,EAAKM,aAELN,EAAKO,SAASC,OAAUR,EAAKO,SAASR,KAAI,SAAAC,GAAU,OAAQ,sBAAgCC,UAAU,OAA1C,SAAkDD,EAAKS,MAA5B,IAAfC,KAAKC,aAA2D,GAI1IX,EAAKO,SAASC,OAAUR,EAAKO,SAASR,KAAI,SAAAC,GAAU,OAAQ,qBAAKI,IAAKJ,EAAKY,WAA+B,IAAfF,KAAKC,aAAwB,KAX/E,IAAfD,KAAKC,aAyBpC,OACI,sBAAMV,UAAU,YAAhB,UAEK,qBAAKA,UAAU,SAAf,uBAEF,eAAC,IAAD,CACCY,WAAYxB,EAAOmB,OACnBM,KAdO,WACnBC,QAAQC,IAAI,QACZC,YAAW,WACP3B,EAAUD,EAAO6B,OAAO7B,MACzB,OAWS8B,SAAS,EACTC,OAAQ,4CAJT,cAKItB,EALJ,OAOC,qBAAKG,UAAU,SAAf,2BCrCLoB,MAbf,WAEE,OAEK,8BACG,cAAC,EAAD,OCHKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.638c9bef.chunk.js","sourcesContent":["import React  , { useState , useEffect} from 'react' ;\r\nimport './Right-style.css';\r\nimport axios from \"axios\";\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\n\r\n\r\n\r\n\r\nconst Right = () => {\r\n    const [images ,setImages] = useState([]);\r\n  \r\n     \r\n      \r\n    useEffect( ()=>{\r\n        axios.get(`http://80.240.21.204:1337/news?skip=12&limit=10`).then(resp => { setImages(resp.data.news) }  )\r\n\r\n    } , [])\r\n\r\n    \r\n  \r\n    const theNews = images.map(item => { \r\n        return(\r\n            <div className='contiant' key={Math.random()* 100} >\r\n                \r\n                <h2>{item.source.title}</h2>\r\n               <img src={item.source.url} />\r\n               <h4>{item.title}</h4>\r\n               <p>{item.created_at}</p> \r\n               {\r\n                   item.keywords.length  ? item.keywords.map(item => { return (<span key ={Math.random()* 100} className=\"SPan\">{item.name}</span>  ) }) : '' \r\n               }\r\n\r\n               {\r\n                 item.keywords.length  ? item.keywords.map(item => { return (<img src={item.imagePath} key={Math.random() *100}/> ) }) : '' \r\n                } \r\n        \r\n            </div>\r\n        )\r\n    }) ;\r\n\r\n    const  fetchMoreData = () =>  {\r\n        console.log('test')\r\n        setTimeout(() => {\r\n            setImages(images.concat(images) )\r\n        }, 1500);\r\n      };\r\n    \r\n            return(\r\n                <div  className='container'>\r\n                    \r\n                     <div className='fixeds'>Show News</div>\r\n\r\n                   <InfiniteScroll\r\n                    dataLength={images.length}\r\n                    next={fetchMoreData}\r\n                    hasMore={true}\r\n                    loader={<h4>Loading...</h4>}\r\n                    > {theNews} </InfiniteScroll> \r\n\r\n                    <div className='fixeds'>Show News</div>\r\n                  \r\n                 </div>\r\n            )\r\n\r\n  \r\n}\r\n\r\nexport default Right ;\r\n","\nimport React  from 'react';\nimport Right from './Components/Right/Right';\n\n\n\n\n\n\n\nfunction App() {\n  \n  return (\n  \n       <div>\n          <Right />\n          \n       </div>\n)                  \n\n  \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}